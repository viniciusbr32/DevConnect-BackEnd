generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}

enum Visibility {
  PUBLIC
  PRIVATE
}

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  password     String?
  authType     String // Google, GitHub ou email
  createdAt    DateTime      @default(now())
  projects     Project[]     @relation("CreatedProjects")
  applications Application[]
  skills       Skill[]       @relation("UserSkills")

  @@map("Users")
}

model Project {
  id           String        @id @default(uuid())
  title        String
  description  String
  visibility   Visibility // público ou privado
  level        Level // iniciante, intermediário, avançado
  technologies Skill[]       @relation("ProjectTechnologies")
  createdAt    DateTime      @default(now())
  createdBy    User          @relation("CreatedProjects", fields: [createdById], references: [id])
  createdById  String
  applications Application[]

  @@map("Projects")
}

model Application {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  status    Status   @default(PENDING) // pending, accepted, rejected
  appliedAt DateTime @default(now())

  @@map("Applications")
}

model Skill {
  id       String    @id @default(uuid())
  name     String    @unique
  users    User[]    @relation("UserSkills")
  projects Project[] @relation("ProjectTechnologies")

  @@map("Skills")
}
